-- Lama.cf

Prog. Program ::= [Stm] ;

terminator Stm "" ;

SExp.       Stm ::= Exp ";" ;
SDecl.      Stm ::= Type Ident ";"  ;
SAss.       Stm ::= Ident "=" Exp ";" ;
SInit.      Stm ::= Type Ident "=" Exp ";" ;
SPrint.     Stm ::= "print" Exp  ";" ;
SWhile.     Stm ::= "while" "(" Exp ")" Stm ;
SBlock.     Stm ::= "{" [Stm] "}" ;
SIfElse.    Stm ::= "if" "(" Exp ")" Stm "else" Stm ;

EVar.       Exp8 ::= Ident ;
EInt.       Exp8 ::= Integer ;
EDouble.    Exp8 ::= Double ;
EBool.      Exp8 ::= Bool ;
EPostIncr.  Exp7  ::= Ident "++" ;
EPostDecr.  Exp7  ::= Ident "--" ;
EPreIncr.   Exp6  ::= "++" Ident ;
EPreDecr.   Exp6  ::= "--" Ident ;
EMul.       Exp5  ::= Exp5 "*" Exp6 ;
EDiv.       Exp5  ::= Exp5 "/" Exp6 ;
EAdd.       Exp4  ::= Exp4 "+" Exp5 ;
ESub.       Exp4  ::= Exp4 "-" Exp5 ;
ELess.      Exp2  ::= Exp3 "<"  Exp3 ;
EGreater.   Exp2  ::= Exp3 ">"  Exp3 ;
ELEq.       Exp2  ::= Exp3 "<="  Exp3 ;
EGEq.       Exp2  ::= Exp3 ">="  Exp3 ;
EEq.        Exp1  ::= Exp2 "=="  Exp2 ;
ENEq.       Exp1  ::= Exp2 "!="  Exp2 ;

rules Bool ::= "true" | "false";

coercions Exp 8 ;

TInt.    Type ::= "int" ;
TDouble. Type ::= "double" ;
TBool.   Type ::= "bool" ;
