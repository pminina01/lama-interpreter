// File generated by the BNF Converter (bnfc 2.9.4).

package lama.Absyn;

public class SFun  extends Stm {
  public final Type type_1, type_2;
  public final String ident_1, ident_2;
  public final ListStm liststm_;
  public final Exp exp_;
  public SFun(Type p1, String p2, Type p3, String p4, ListStm p5, Exp p6) { type_1 = p1; ident_1 = p2; type_2 = p3; ident_2 = p4; liststm_ = p5; exp_ = p6; }

  public <R,A> R accept(lama.Absyn.Stm.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof lama.Absyn.SFun) {
      lama.Absyn.SFun x = (lama.Absyn.SFun)o;
      return this.type_1.equals(x.type_1) && this.ident_1.equals(x.ident_1) && this.type_2.equals(x.type_2) && this.ident_2.equals(x.ident_2) && this.liststm_.equals(x.liststm_) && this.exp_.equals(x.exp_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(37*(37*(37*(this.type_1.hashCode())+this.ident_1.hashCode())+this.type_2.hashCode())+this.ident_2.hashCode())+this.liststm_.hashCode())+this.exp_.hashCode();
  }


}
